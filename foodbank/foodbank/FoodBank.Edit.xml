<EditDataFormTemplateSpec 
	xmlns="bb_appfx_editdataformtemplate"
	xmlns:common="bb_appfx_commontypes" 
	ID="42617c47-174d-4a3e-8533-3c80c5653a08" 
	Name="Food Bank Edit Form LHOLT"
	Description="Used for editing the given Food Bank." 
	Author="Technical Training"
	DataFormInstanceID="347ccc56-8d0c-4c58-994b-bb661f8149ae" 
	RecordType="Food Bank LHOLT"
	common:SecurityUIFolder="Constituent\Food Bank LHOLT"
	FormHeader="Edit a food bank"
	>

	<SPDataForm>

		<!-- define the edit load SP, which is used to load the data for the form -->
		<LoadImplementation SPName="USP_DATAFORMTEMPLATE_EDITLOAD_FOODBANK_LHOLT">
			<common:CreateProcedureSQL>
				<![CDATA[
create procedure dbo.USP_DATAFORMTEMPLATE_EDITLOAD_FOODBANK_LHOLT
(
    @ID uniqueidentifier,
    @DATALOADED bit = 0 output,
    @TSLONG bigint = 0 output,
	@CONSTITUENTKEYNAME nvarchar(100) = Null output,
    @DESCRIPTION nvarchar(max) = null output,
    @MISSIONSTATEMENT nvarchar(max) = null output,
    @FOODBANKTYPECODEID uniqueidentifier = null output
)
as

	set nocount on;

	-- be sure to set these, in case the select returns no rows
	set @DATALOADED = 0
	set @TSLONG = 0

	-- populate the output parameters, which correspond to fields on the form.  Note that
	-- we set @DATALOADED = 1 to indicate that the load was successful.  Otherwise, the system
	-- will display a "no data loaded" message.  Also note that we fetch the TSLONG so that concurrency
	-- can be considered.
	select
		@DATALOADED = 1,
		@TSLONG = U.TSLONG,
		@CONSTITUENTKEYNAME = C.NAME,
        @DESCRIPTION = U.DESCRIPTION, 
        @MISSIONSTATEMENT = U.MISSIONSTATEMENT, 
        @FOODBANKTYPECODEID = U.FOODBANKTYPECODEID
		
		from dbo.USR_FOODBANK_LHOLT U
	INNER JOIN CONSTITUENT C ON C.ID = U.ID
	WHERE U.ID = @ID

	return 0;

				]]>
			</common:CreateProcedureSQL>
		</LoadImplementation>

		<SaveImplementation SPName="USP_DATAFORMTEMPLATE_EDIT_FOODBANK_LHOLT">
			<common:CreateProcedureSQL>
				<![CDATA[
create procedure dbo.USP_DATAFORMTEMPLATE_EDIT_FOODBANK_LHOLT
(
		@ID uniqueidentifier,
	@CHANGEAGENTID uniqueidentifier = null,
    @DESCRIPTION nvarchar(max),
    @MISSIONSTATEMENT nvarchar(max),
    @FOODBANKTYPECODEID uniqueidentifier
)
as

	set nocount on;

	if @CHANGEAGENTID is null  
		exec dbo.USP_CHANGEAGENT_GETORCREATECHANGEAGENT @CHANGEAGENTID output
						
	begin try
		-- handle updating the data
		update dbo.USR_FOODBANK_LHOLT set
            DESCRIPTION = @DESCRIPTION,
            MISSIONSTATEMENT = @MISSIONSTATEMENT,
            FOODBANKTYPECODEID = @FOODBANKTYPECODEID,

			CHANGEDBYID = @CHANGEAGENTID,
			DATECHANGED = getdate()
		where ID = @ID
	end try
	begin catch
		exec dbo.USP_RAISE_ERROR
		return 1
	end catch

return 0;
				]]>
			</common:CreateProcedureSQL>
      
    <common:ExpectedDBExceptions>
      <common:Constraints>
        <common:Constraint Name="FK_USR_FOODBANK_LHOLT_FOODBANKTYPECODEID" Field="FOODBANKTYPECODEID" Type="ForeignKey" />
      </common:Constraints>
    </common:ExpectedDBExceptions>
    </SaveImplementation>
  </SPDataForm>

	<!-- describe fields on the form, which correspond to parameters on the SP.  Note that system paramters 
	like the record ID, DATALOADED, TSLONG, and CURRENTAPPUSERID need not be listed. -->
  <common:FormMetaData FixedDialog="true">
    <common:FormFields>
      <common:FormField FieldID="CONSTITUENTKEYNAME" Caption ="Constituent"  ReadOnly="true"/>
      <common:FormField FieldID="DESCRIPTION" Caption="Description" />
      <common:FormField FieldID="MISSIONSTATEMENT" Caption="Mission Statement" />
      <common:FormField FieldID="FOODBANKTYPECODEID" DataType="Guid" Caption="Food Bank Type" Required="true">
        <common:CodeTable CodeTableName="USR_LHOLT_FOODBANKTYPECODE" />
      </common:FormField>
    </common:FormFields>

  </common:FormMetaData>

</EditDataFormTemplateSpec>